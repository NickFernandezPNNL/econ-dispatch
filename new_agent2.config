{
    # turn off actuator reservations as they are not needed.
    "make_reservations": false,

    "training_frequency": 7, #How often to retrain the models in days.

    "optimizer_debug": "optimizer output.csv",
    "optimization_frequency": 60, #Frequency of optimization in minutes.
    "optimizer":
    {
        "name": "use_case_2",
        #"use_glpk": true,
        #"glpk_options": ["--tmlim", "10"],
        "write_lp": false,
        "lp_out_dir": "lps"
    },
    "weather":
    {
        "type": "history",
        "settings":
        {
            "history_data_file": "USA_IL_Chicago-OHare.csv",
            "hours_forecast": 5
        }
    },
    "forecast_models":
    {
        "building_load":
        {
            "type": "history",
            "settings":
            {
                "history_data_file": "hospital_data_no_leap_day.csv"
            }
        },
        "solar_pv":
        {
            "type": "zero"
        },
        "natural_gas_cost":
        {
            "type": "static",
            "settings":
            {
                "cost": 7.614
            }
        },
        "electricity_cost":
        {
            "type": "static",
            "settings":
            {
                "cost": 0.1
            }
        }
    },
    "components":
    [
     {
        "type": "centrifugal_chiller_igv",
        "name": "centrifugal_chiller",
        # Initial training data for component.
        # "initial_training_data": "./component_example_training_data/CH-Cent-IGV-Historical-Data.json",
        # Default parameters if no training data or training sources available.
        "default_parameters":
         {
             "fundata": {
                 "a": [28.28653004,42.18962324,66.98844306],
                 "b": [31.44670603,-22.77535742,-149.2493385],
                 "min": [1.5,3.9,5.1],
                 "max": [3.9,5.1,6]
             },
             "ramp_up": 6,
             "ramp_down": -6,
             "startcost": 15
        },
#        "training_window": 90, # Length of training data window in days.
#        "training_sources": # Topics to query from historian for training data mapped to names the component expects.
#        {
#            "PNNL/ISB1/centrifugal_chiller/P(kW)": "P(kW)",
#            "PNNL/ISB1/centrifugal_chiller/Qch(tons)": "Qch(tons)"
#        },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "command": "PNNL/ISB1/centrifugal_chiller/chiller_on"
        },
        "settings":
        {
            "capacity": 200.0
        }
     },
     {
        "type": "battery",
        "name": "battery",
        # Initial training data for component.
        "initial_training_data": "./component_example_training_data/battery.csv",
        # Default parameters if no training data or training sources available.
        "default_parameters":
        {
            "charge_eff": 0.8,
            "discharge_eff": 0.7
        },
        "training_window": 90, # Length of training data window in days.
        "training_sources": # Topics to query from historian for training data mapped to names the component expects.
        {
            "PNNL/ISB1/battery/power": "power",
            "PNNL/ISB1/battery/soc": "soc"
        },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "command": "PNNL/ISB1/battery/command"
        },
        "inputs":
        {
            "devices/PNNL/ISB1/battery/soc": "soc"
        },
        "settings":
        {
            "capacity": 24000.0,
            "min_power": 1500.0,
            "max_power": 4000.0,
            "min_soc": 0.3,
            "max_soc": 0.8
        }
     },
     {
        "type": "micro_turbine_generator",
        "name": "micro_turbine_generator",
        # "initial_training_data": "./component_example_training_data/CapstoneTurndownData.json",
         "default_parameters":
        {
            "fundata": {
                "a": [0.005795769,0.007508459,0.01016358],
                "b":[1.048286489,0.471110067,-0.657316438],
                "min":[130,337,425],
                "max":[337,425,500]
             },
            "ramp_up": 200,
            "ramp_down": -200,
            "startcost": 10,
            "min_on": 3,
            "output": 250
            
        },
#        "training_window": 90, # Length of training data window in days.
#        "training_sources": # Topics to query from historian for training data mapped to names the component expects.
#        {
#            "PNNL/ISB1/micro_turbine_generator/temperature": "temperature",
#            "PNNL/ISB1/micro_turbine_generator/power": "power",
#            "PNNL/ISB1/micro_turbine_generator/fuel_flow": "fuel_flow",
#            "PNNL/ISB1/micro_turbine_generator/air_flow": "air_flow"
#        },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "set_point": "PNNL/ISB1/fuel_cell/set_point"
        },
		"settings":
		{
            "capacity": 60.0,
            "fuel_lhv": 50144.0,
            "temp_derate_threshold": 15.556,
            "temp_derate": 0.12
		}
     },
     {
        "type": "fuel_cell",
        "name": "fuel_cell",
        # Initial training data for component.
        # "initial_training_data": "./component_example_training_data/Gen2.csv",
        # Default parameters if no training data or training sources available.
        "default_parameters":
        {
            "fundata": {
                "a":[0.006180193,0.022282239,0.069634483],
                "b":[0.691878943,-5.990469852,-31.56068196],
                "min":[150,415,540],
                "max":[415,540,600]
             },
            "ramp_up": 150,
            "ramp_down": -150,
            "startcost": 20,
            "min_on": 3,
            "output": 300
            
        },
#        "training_window": 90, # Length of training data window in days.
#        "training_sources": # Topics to query from historian for training data mapped to names the component expects.
#        {
#            "PNNL/ISB1/fuel_cell/valid": "valid", # This will probably go away...
#            "PNNL/ISB1/fuel_cell/power": "power",
#            "PNNL/ISB1/fuel_cell/amb_temperature": "amb_temperature",
#            "PNNL/ISB1/fuel_cell/start": "start",
#            "PNNL/ISB1/fuel_cell/hours": "hours"
#        },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "set_point": "PNNL/ISB1/fuel_cell/set_point"
        },
        "settings":
        {
            "capacity": 500.0,
            "fuel_type": "CH4",
            "nominal_power": 402.0,
            "nominal_ocv": 0.8
        }
     },
     {
        "type": "absorption_chiller",
        "name": "absorption_chiller",
        # Initial training data for component.
        # "initial_training_data": "./component_example_training_data/CH-Abs-Historical-Data.json",
        # Default parameters if no training data or training sources available.
        "default_parameters":
        {
             "fundata": {
                 "a":[1.352948418,0.999815107,0.932180063],
                 "b":[0.615246616,0.75649994,0.80249177],
                 "min":[0.25,0.4,0.68],
                 "max":[0.4,0.68,0.75]
             },
             "ramp_up": 0.25,
             "ramp_down": -0.25,
             "startcost": 2
        },
#        "training_window": 90, # Length of training data window in days.
#        "training_sources": # Topics to query from historian for training data mapped to names the component expects.
#        {
#            "PNNL/ISB1/absorption_chiller/Qin(MMBtu/h)": "Qin(MMBtu/h)",
#            "PNNL/ISB1/absorption_chiller/Qch(tons)": "Qch(tons)"
#        },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "set_point": "PNNL/ISB1/absorption_chiller/set_point"
        },
        "settings":
        {
            "capacity": 464.0,
            "min_off": 3,
            "min_on": 3
        }
     },
     {
        "type": "boiler",
        "name": "boiler",
        # Initial training data for component.
        # "initial_training_data": "./component_example_training_data/Boiler-Historical-Data.json",
        # Default parameters if no training data or training sources available.
        "default_parameters": {
             "fundata": {
                 "a": [1.451120189, 1.201299255, 1.450670102],
                 "b": [0.687845722, 1.267430288, -0.328543131],
                 "min": [1.2, 2.32, 6.4],
                 "max": [2.32, 6.4, 8]
             },
             "ramp_up": 8,
             "ramp_down": -8,
             "startcost": 0.8
        },
        # "training_window": 90, # Length of training data window in days.
        # "training_sources": # Topics to query from historian for training data mapped to names the component expects.
        # {
        #     "PNNL/ISB1/boiler/heat_output)": "heat_output",
        #     "PNNL/ISB1/boiler/gas_input": "gas_input"
        # },
        # Output topics for a component
        # Maps the outputs of the component model to actuation point names.
        "outputs":
        {
            "command": "PNNL/ISB1/boiler/command"
        },
        "settings":
        {
            "capacity": 8.0
        }
     }
    ]

#    "connections": []
#    [
#        ["natural_gas_meter", "micro_turbine_generator"],
#        ["micro_turbine_generator", "heat_recovery_unit"],
#        ["heat_recovery_unit", "absorption_chiller"],
#        ["heat_recovery_unit", "air_handlers"],
#        ["absorption_chiller", "air_handlers"],
#        ["electric_meter", "chiller"],
#        ["chiller", "air_handlers"],
#        ["air_handlers", "building_load"],
#        ["electric_meter", "building_load"],
#        ["micro_turbine_generator", "electric_meter"],
#        ["natural_gas_meter", "boiler"],
#        ["boiler", "air_handlers"]
#    ]

}
